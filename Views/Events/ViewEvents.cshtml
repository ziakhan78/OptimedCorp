@*@model IEnumerable<OptimedCorporation.Models.Events>*@

@model PagedList.IPagedList<OptimedCorporation.Models.Events>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "View Events";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


<p>
    <a class="btn btn-success btn-sm" href="@Url.Action("Create", "Events")"><i class="glyphicon glyphicon-plus-sign"></i> Add New</a>
    <a class="btn btn-success btn-sm" href="@Url.Action("Create", "EventImages")"><i class="glyphicon glyphicon-menu-up"></i> Upload Event Images</a>
</p>
@*<p>
       @Html.ActionLink("Upload Event Images", "Create", "EventImages")
        <button type="button" class="btn btn-primary btn-group-sm" data-toggle="modal" data-target="#myModal">
            Upload Event Images
        </button>
    </p>*@

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Modal title</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("UploadEventImages")
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>



<table class="table">
    <tr>
        <th>
            Thumbnail
        </th>
        <th>
            Title
        </th>
        <th>
            Event Date
        </th>
        <th>
            Location
        </th>
        <th>
            Description
        </th>

        @*<th>
                Images
            </th>*@
        <th>
            Status
        </th>

        <th>Action</th>
    </tr>

    @foreach (var item in Model)
    {
    <tr>
        <td>
            <img src='~/EventsNews/EventsThumbnails/@Html.ValueFor(modelItem => item.Thumbnail)' alt="" height="75" width="75" />
        </td>

        <td width="150">
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td width="110">
            @Html.DisplayFor(modelItem => item.EventDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Location)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>

        @*<td>
            @Html.DisplayFor(modelItem => item.Images)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.Ipaddress)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateAdded)
        </td>*@
        <td width="250">

            @*@Html.ActionLink("Edit", "Edit", new { id = item.EventId }) |
        @Html.ActionLink("Details", "Details", new { id = item.EventId }) |
        @Html.ActionLink("Delete", "Delete", new { id = item.EventId })*@


            <a class="btn btn-info btn-sm" href="@Url.Action("Index", "EventImages", new { id = item.EventId})"><i class="glyphicon glyphicon-info-sign"></i> Details</a>
            <a class="btn btn-primary btn-sm" href="@Url.Action("Edit", "Events", new { id = item.EventId})"><i class="glyphicon glyphicon-edit"></i> Edit</a>
            <a class="btn btn-danger btn-sm" onclick="return confirm('Are sure you want to delete this item?');" href="@Url.Action("DeleteConfirmed", "Events", new { id = item.EventId})"><i class="glyphicon glyphicon-trash"></i> Delete</a>
        </td>
    </tr>
    }


</table>

<div style="float:right">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Events", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>

