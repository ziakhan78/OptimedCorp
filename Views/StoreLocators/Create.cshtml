@model OptimedCorporation.Models.StoreLocator

@{
    ViewBag.Title = "Store Locator";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Add Store Locator</h2>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>


<script>
    function getCityList() {
        debugger;
        var stateId = $("#State").val();
        $.ajax({
            url: '/StoreLocators/GetCityList',
            type: 'POST',
            datatype: 'application/json',
            contentType: 'application/json',
            data: JSON.stringify({ stateId: +stateId }),
            success: function (result) {
                $("#City").html("");
                $("#City").append
                    ($('<option></option>').val(null).html("Select City"));
                $.each($.parseJSON(result), function (i, city) { $("#City").append($('<option></option>').val(city.CityId).html(city.CityName)) })

            },
            error: function () { alert("Whooaaa! Something went wrong..") },
        });
    }
</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ShopName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ShopName, new { htmlAttributes = new { @class = "custom_css_fixedwidth" } })
            @Html.ValidationMessageFor(model => model.ShopName, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "custom_css" } })
            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mobile2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mobile2, new { htmlAttributes = new { @class = "custom_css" } })
            @Html.ValidationMessageFor(model => model.Mobile2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone1, new { htmlAttributes = new { @class = "custom_css" } })
            @Html.ValidationMessageFor(model => model.Phone1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone2, new { htmlAttributes = new { @class = "custom_css" } })
            @Html.ValidationMessageFor(model => model.Phone2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "custom_css_fixedwidth" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            <select id="State" name="State" onchange="getCityList()" class="custom_css">
                <option>Select State</option>
                @foreach (var item in ViewBag.StateList1)
                {
                    <text>
                        <option value="@item.StateId" text="@item.StateName">@item.StateName</option>
                    </text>
                }
            </select>
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            <select id="City" name="City" class="custom_css">
                <option>Select City</option>
            </select>
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Pin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Pin, new { htmlAttributes = new { @class = "custom_css" } })
            @Html.ValidationMessageFor(model => model.Pin, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "custom_css", placeholder = "Longitude" } }) @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "custom_css", placeholder = "Latitude" } })

        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.WorkingTimeStart, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WorkingTimeStart, new { htmlAttributes = new { @class = "custom_css", placeholder = "Start Time" } }) @Html.EditorFor(model => model.WorkingTimeEnd, new { htmlAttributes = new { @class = "custom_css", placeholder = "End Time" } })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.ClosedOn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div>
            @Html.RadioButtonFor(model => model.ClosedOn, "Sunday", new { @checked = "checked", @class = "custom_css" })<span>Sunday</span>
            @Html.RadioButtonFor(model => model.ClosedOn, "Monday", new { @class = "custom_css" }) <span> Monday </span>
            @Html.RadioButtonFor(model => model.ClosedOn, "Tuesday", new { @class = "custom_css" }) <span> Tuesday </span>
            @Html.RadioButtonFor(model => model.ClosedOn, "Wednesday", new { @class = "custom_css" }) <span> Wednesday </span>
            @Html.RadioButtonFor(model => model.ClosedOn, "Thursday", new { @class = "custom_css" }) <span> Thursday </span>
            @Html.RadioButtonFor(model => model.ClosedOn, "Friday", new { @class = "custom_css" }) <span> Friday </span>
            @Html.RadioButtonFor(model => model.ClosedOn, "Saturday", new { @class = "custom_css" }) <span> Saturday </span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Status) (Checked for Active and only Active Status will display on front-end.)
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>

    <div>
        <div class="col-md-offset-2 col-md-10">
            <span style="color:green">@Html.Raw(ViewBag.Message)</span>
        </div>
    </div>

</div>
}

<div>
    @Html.ActionLink("Back to List", "ViewStoreLocator")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
